def BFS(G, frontier){
    #logical;
    N = |G|[0];
    levels = Zero(N, 1);
    maskedGT = G^T;
    depth = 0;
    while (sum(frontier)) {
        #arithmetic;
        depth = depth + 1;
        #logical;
        levels[rangeFromVector(frontier)] = depth;
        mask = !(frontier^T)[Zero(N), 0, 1, N];
        maskedGT = maskedGT @ mask;
        frontier = maskedGT*frontier;
    }
    #arithmetic;
    return levels + (One(|levels|)~(-1));
}

G = [0,0,1; 1,0,0; 0,1,0];
frontier = [1,0,0];
BFS(G, frontier);
